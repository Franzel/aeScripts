{//PALETTE --------------------------------------------------------------------------------------------------------------------------	function myScript(thisObj){		// SETUP  ---------------------------------------------------------------------------------------------------------------------		var project = app.project;		// GLOBAL PARAMETERS ----------------------------------------------------------------------------------------------------------		var randomMax = 0.0; //set to Zero if no random is desired		var timeSpan = 5.0;  //time from beginning to end to sequence		var ascending = false; //determines if we order layers top-bottom or vice-versa		var compName = null;		/*----------------------------------------------------------------------------------------------------------------------------*/		function getRandom(min, max) {		  return Math.random() * (max - min) + min;		}		/*----------------------------------------------------------------------------------------------------------------------------*/		function getIndexfromName(_name){		    for(var i=1;i<project.items.length+1;i++){		        var currComp = project.item(i);		        if (currComp.name == _name){		            //alert(currComp.name +" " + project.item(i).name + " " + i);		            return i;		        }		    } 		}				function onRunButtonClick(){			var myComp = project.item(getIndexfromName(compName)); //change Comp's name here			var nLayers = myComp.numLayers;			for(var i = 1; i<= nLayers; i++){			    var thisLayer = myComp.layer(i);				var t = thisLayer.startTime;			    var randomAmt = getRandom(0,randomMax); 				if(!thisLayer.locked){			        if(ascending){			            thisLayer.startTime = timeSpan - (timeSpan/(nLayers-1))*(i-1) +randomAmt; //interval is equally distributed depending on the nLayers and timeSpan            			        }else{			            thisLayer.startTime = (timeSpan/(nLayers-1))*(i-1) +randomAmt; //interval is equally distributed depending on the nLayers and timeSpan			        }			    }			}		}		function resetLayers(){			var myComp = project.item(getIndexfromName(compName)); //change Comp's name here			var nLayers = myComp.numLayers;			for(var i = 1; i<= nLayers; i++){			    var thisLayer = myComp.layer(i);				if(!thisLayer.locked){			        thisLayer.startTime = 0; 			    }			}		}		function setAscending(){				ascending= !ascending;		} 		function myScript_buildUI(thisObj){			var myPanel = (thisObj instanceof Panel) ? thisObj : new Window("palette", "my Window Name", undefined, {resizeable: true});			//resource string			res = "group{orientation:'column', alignment:['left','fill'], alignChildren:['center','fill'],\				myButtonPanel: Panel{orientation:'row', text:'controls',\                    myRunButton: Button{text:'Run', preferredSize:[80,25]},\					myResetButton: Button{text:'Reset', preferredSize:[80,25]},\	            },\				groupOne: Group{orientation:'column', alignment:['fill','fill'], alignChildren:['left','top'],\					myCompNameTextTitle: StaticText{text:'Comp Name'},\					myCompNameText: EditText{text:'', preferredSize:[150,20]},\					myTimeSpanTextTitle: StaticText{text:'TimeSpan'},\					myEditText1: EditText{text:'',preferredSize:[40,20]},\					myRandomTextTitle: StaticText{text:'Random Amount'},\					myEditText2: EditText{text:'',preferredSize:[40,20]},\					myDropDownListTitle: StaticText{text:'Stack Order'},\					myDropDownList: DropDownList{properties:{items:['ascending', 'descending']}},\	            },\	        }"; 			myPanel.grp = myPanel.add(res); //add resource string to our panel        	var groupOneAlias = myPanel.grp.groupOne;        	var myButtonPanelAlias = myPanel.grp.myButtonPanel;        	//help Tips	      	myPanel.grp.myButtonPanel.myRunButton.helpTip = "Sequence Layers";	      	myPanel.grp.myButtonPanel.myResetButton.helpTip = "Resets all the Layers to time=0";	      	groupOneAlias.myCompNameText.helpTip = "Type the name of the Comp where the script needs to run";	      	groupOneAlias.myEditText1.helpTip = "Sets time between first and last layer, in seconds";	      	groupOneAlias.myEditText2.helpTip = "Sets the maximum time random offset, in seconds";	      	groupOneAlias.myDropDownList.helpTip = "Determines if layers are stacked ascending or descending";			//defaults, overriding parameters above			myPanel.grp.groupOne.myDropDownList.selection = 1; //setting default selection for dropdown list						//Panel Sizing			myPanel.layout.layout(true);			myPanel.grp.minimumSize = myPanel.grp.size;			//EVENTS			// myPanel.grp.groupOne.myCheckBox.onClick = function(){			// 	ascending = !ascending;			// }			myPanel.grp.myButtonPanel.myRunButton.onClick = onRunButtonClick;			myPanel.grp.myButtonPanel.myResetButton.onClick = resetLayers;			//select asscending-descending			myPanel.grp.groupOne.myDropDownList.onChange = function(){				if(myPanel.grp.groupOne.myDropDownList.selection == 0){					ascending = true;				}else if(myPanel.grp.groupOne.myDropDownList.selection == 1){					ascending = false;				}else{					ascending = true;				}			}			//set time span			myPanel.grp.groupOne.myEditText1.onChange = function(){				timeSpan = myPanel.grp.groupOne.myEditText1.text;			}			//set random amount			myPanel.grp.groupOne.myEditText2.onChange = function(){				randomMax = myPanel.grp.groupOne.myEditText2.text;			}			//set random amount			myPanel.grp.groupOne.myCompNameText.onChange = function(){				compName = myPanel.grp.groupOne.myCompNameText.text;			}			myPanel.layout.resize();			myPanel.onResizing = myPanel.onResize = function(){this.layout.resize()};			return myPanel;		}		var myScriptPal = myScript_buildUI(thisObj);		if( (myScriptPal != null) && (myScriptPal instanceof Window) ){			myScriptPal.center();			myScriptPal.show();		}	}//end Script function	myScript(this);}//end main