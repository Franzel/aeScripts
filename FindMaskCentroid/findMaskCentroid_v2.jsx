{var project = app.project;var comp = project.activeItem;if(app.project && app.project.activeItem && app.project.activeItem instanceof CompItem && app.project.activeItem.selectedLayers.length > 0 ){	var maskLayer = comp.selectedLayers[0];	var myMask = maskLayer.property("ADBE Mask Parade").property(1).maskShape; //get the mask	var myShape = myMask.value;	var verts = myShape.vertices;	var nVerts = verts.length;	$.writeln(verts);		//get original vertex positions --DEBUG - delete when done	for(var i=0; i<nVerts; i++){		var xPos = Math.round(verts[i][0] * 100) / 100;		var yPos = Math.round(verts[i][1] * 100) / 100;		$.writeln("orig   " +xPos + ",  " + yPos);	}	var verticesX = [];	var verticesY = [];	$.writeln("-----------");	//get original vertex positions	for(var i=0; i<nVerts; i++){		var xPos = Math.round(verts[i][0] * 100) / 100;		var yPos = Math.round(verts[i][1] * 100) / 100;		verticesX.push(xPos);		verticesY.push(yPos);		$.writeln("copy   " + verticesX[i] + ",  " + verticesY[i]);	}	verticesX.sort( function(a,b){return a-b} );	verticesY.sort( function(a,b){return a-b} );	$.writeln("-----------");	for(var i=0; i<nVerts; i++){		$.writeln("sort   " + verticesX[i] + ",  " + verticesY[i]);	}	var bounds = new MaskBounds(verticesX[0], verticesY[0], verticesX[verticesX.length-1], verticesY[verticesY.length-1]);	var worldPosX = [ maskLayer.position[0]-bounds.ul[0], maskLayer.position[1]-bounds.ul[1] ];	//comp.layers.addSolid( [1,0,0], "cc", 10, 10, 1, comp.duration );	//comp.layer(1).anchorPoint.setValue(bounds.cc);    maskLayer.anchorPoint.setValue(bounds.cc);    var diff = maskLayer.anchorPoint.value - maskLayer.position.value;    maskLayer.position.setValue(maskLayer.position.value + diff);}else{	alert("Please select a layer first");}function MaskBounds(minX, minY, maxX, maxY){		this.ul = [minX, minY];		this.ur = [maxX, minY];		this.ll = [maxX, maxY];		this.lr = [minX, maxY];		this.cc = [minX + (maxX-minX)/2, minY + (maxY-minY)/2];};}//end main