/*This script copies the vertex positions of a mask and applies it to position on a different layerFrancisco ZamoranoJune 2015*/var project = app.project;var myComp = project.activeItem;var maskLayer = myComp.selectedLayers[0]; //change origin's layer name herevar maskLayerName = maskLayer.name;var myMask = maskLayer.property("ADBE Mask Parade").property(1).maskShape; //get the maskvar myShape = myMask.value;var verts = myShape.vertices;var nVerts = verts.length;var bWorldCoords = true; //as default, bezier tangents positions are relative to the vertex, set this to true to get world coordinates insteadvar vertsSorted  = myShape.vertices.slice(0); //make a copy of the array of verticesvar listX = []; //create new array for points in Xvar listY = []; //create new array for points in Y//populate new arraysfor(var i=0; i<nVerts; i++){    var xPos = vertsSorted[i][0];    var yPos = vertsSorted[i][1];    listX.push(xPos);    listY.push(yPos);}// sort new arrayslistX.sort(compareVertices);listY.sort(compareVertices);//main operationapp.beginUndoGroup("get centroid");drawPoints(listX[0], listY[0], listX[listX.length-1], listY[listY.length-1]);var cent = new centroid (listX[0], listY[0], listX[listX.length-1], listY[listY.length-1]);cent.draw();repositionAnchor(maskLayer, cX, cY );app.endUndoGroup();compareVertices = function(a, b) {    return a > b;}drawPoints = function(minX, minY, maxX, maxY){    myComp.layers.addSolid( [1,0,0], "ul", 10, 10, 1, myComp.duration );    myComp.layer(1).position.setValue([minX, minY]);    myComp.layers.addSolid( [1,0,0], "ur", 10, 10, 1, myComp.duration );    myComp.layer(1).position.setValue([maxX, minY]);    myComp.layers.addSolid( [1,0,0], "lr", 10, 10, 1, myComp.duration );    myComp.layer(1).position.setValue([maxX, maxY]);    myComp.layers.addSolid( [1,0,0], "ll", 10, 10, 1, myComp.duration );    myComp.layer(1).position.setValue([minX, maxY]);};centroid = function(minX, minY, maxX, maxY){    this.get = function(){        var px = minX + (maxX-minX) / 2;        var py = minY + (maxY-minY) / 2;        return {            x: px,            y: py        };    }    this.draw = function(){        var centro = this.get();        myComp.layers.addSolid( [1,0,0], "c", 10, 10, 1, myComp.duration );        myComp.layer(1).position.setValue( [centro.x, centro.y] );    }};repositionAnchor = function(_layer, _x, _y){     var thisLayer = _layer;     var thisLayerPos = thisLayer.property("Position").value;     var thisLayerW = thisLayer.width;     var thisLayerH = thisLayer.height;     var thisLayerAnchor = thisLayer.property("Anchor Point").value;     //reposition anchor     if(thisLayerAnchor[0] != 0){ //to make sure it does not happen more than once        thisLayer.property("Anchor Point").setValue([_x,_y]);        var newX = _x;        var newY = _y;        thisLayer.position.setValue([newX, newY]); //set new pos     }};